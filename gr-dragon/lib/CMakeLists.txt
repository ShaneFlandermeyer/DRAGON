# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-dragon
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

include_directories(${Boost_INCLUDE_DIR} ${OpenCL_INCLUDE_DIRS})
link_directories(${Boost_LIBRARY_DIRS})
link_directories(${FFTW3F_LIBRARY_DIRS})

list(APPEND dragon_sources
        math/difference_impl.cc
        math/dti_impl.cc
        vector-utils/oversample_vector_impl.cc
        math/complex_exponential_impl.cc
        waveform/cpm.cc
        waveform/pulse_shaper_impl.cc
        waveform/pcfm_mod_impl.cc
        waveform/phase_code.cc
        waveform/phase_code_generator_impl.cc
        radar/moving_target_sim_impl.cc
        waveform/pdu_phase_code_generator_impl.cc
        waveform/pdu_lfm_impl.cc
        math/db_impl.cc
        pdu-utils/pdu_to_stream_impl.cc
        math/convolve_impl.cc
        vector-utils/pad_vector_impl.cc
        math/convolve_fft_hier_impl.cc
        GRCLBase.cc
        cl_db_impl.cc
        waveform/lfm_source_impl.cc)

set(dragon_sources "${dragon_sources}" PARENT_SCOPE)
if (NOT dragon_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif (NOT dragon_sources)

add_library(gnuradio-dragon SHARED ${dragon_sources})
target_link_libraries(gnuradio-dragon gnuradio::gnuradio-runtime
        gnuradio::gnuradio-filter gnuradio::gnuradio-fft
        gnuradio::gnuradio-blocks ${OpenCL_LIBRARY})
target_include_directories(gnuradio-dragon
        PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
        PUBLIC $<INSTALL_INTERFACE:include>
        )
set_target_properties(gnuradio-dragon PROPERTIES DEFINE_SYMBOL "gnuradio_dragon_EXPORTS")

if (APPLE)
    set_target_properties(gnuradio-dragon PROPERTIES
            INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
            )
endif (APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-dragon)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# TODO: Build and register test-dragon
########################################################################
list(APPEND test_dragon_sources
        ${CMAKE_CURRENT_SOURCE_DIR}/test_dragon.cc
        ${CMAKE_CURRENT_SOURCE_DIR}/GRCLBase.cc
        )

add_executable(test-dragon ${test_dragon_sources})

target_link_libraries(
        test-dragon
        gnuradio::gnuradio-runtime
        ${Boost_LIBRARIES}
        ${VOLK_LIBRARIES}
        fftw3f
        ${OpenCL_LIBRARY}
        ${CLFFT_LIBRARIES}
        gnuradio-blocks
        gnuradio-filter
        gnuradio-fft
)

target_include_directories(test-dragon
        PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
        PUBLIC $<INSTALL_INTERFACE:include>
        )

install(TARGETS test-dragon DESTINATION "${CMAKE_INSTALL_PREFIX}/bin" RUNTIME)
#########################################################################
## Build and register unit test
#########################################################################
#include(GrTest)
#
## If your unit tests require special include paths, add them here
##include_directories()
## List all files that contain Boost.UTF unit tests here
#list(APPEND test_dragon_sources
#        )
## Anything we need to link to for the unit tests go here
#list(APPEND GR_TEST_TARGET_DEPS gnuradio-dragon)
#
#if (NOT test_dragon_sources)
#    MESSAGE(STATUS "No C++ unit tests... skipping")
#    return()
#endif (NOT test_dragon_sources)
#
#foreach (qa_file ${test_dragon_sources})
#    GR_ADD_CPP_TEST("dragon_${qa_file}"
#            ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
#            )
#endforeach (qa_file)
