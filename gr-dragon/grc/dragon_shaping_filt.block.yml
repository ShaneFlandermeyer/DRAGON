id: dragon_shaping_filt
label: Shaping Filter
category: '[dragon]'

templates:
  imports: import dragon
  make: dragon.shaping_filt(${filt_type}, ${filt_len}, ${vlen})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: filt_type
  label: Filter Type
  dtype: enum
  options: ['"Rectangular"']
  option_labels: ['Rectangular']
- id: filt_len
  label: Filter Length
  dtype: int
  default: 0
- id: vlen
  label: Vec Length
  dtype: int
  default: 1

asserts:
  - ${ vlen > 0 }

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: float
  vlen: ${ vlen }

outputs:
- label: out
  domain: stream
  dtype: float
  vlen: ${ vlen }

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
